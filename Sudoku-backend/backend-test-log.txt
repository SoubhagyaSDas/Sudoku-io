Sample output from test.py for 9x9 puzzle:

5 0 0
3 0 1
0 0 2
0 0 3
7 0 4
0 0 5
0 0 6
0 0 7
0 0 8
6 1 0
0 1 1
0 1 2
1 1 3
9 1 4
5 1 5
0 1 6
0 1 7
0 1 8
0 2 0
9 2 1
8 2 2
0 2 3
0 2 4
0 2 5
0 2 6
6 2 7
0 2 8
8 3 0
0 3 1
0 3 2
0 3 3
6 3 4
0 3 5
0 3 6
0 3 7
3 3 8
4 4 0
0 4 1
0 4 2
8 4 3
0 4 4
3 4 5
0 4 6
0 4 7
1 4 8
7 5 0
0 5 1
0 5 2
0 5 3
2 5 4
0 5 5
0 5 6
0 5 7
6 5 8
0 6 0
6 6 1
0 6 2
0 6 3
0 6 4
0 6 5
2 6 6
8 6 7
0 6 8
0 7 0
0 7 1
0 7 2
4 7 3
1 7 4
9 7 5
0 7 6
0 7 7
5 7 8
0 8 0
0 8 1
0 8 2
0 8 3
8 8 4
0 8 5
0 8 6
7 8 7
9 8 8

Puzzle is a  9 x 9  grid

Puzzle is  Hard  difficulty

ORIGINAL BOARD
5 3 0  | 0 7 0  | 0 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - - 
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

SOLVED BOARD
5 3 4  | 6 7 8  | 9 1 2
6 7 2  | 1 9 5  | 3 4 8
1 9 8  | 3 4 2  | 5 6 7
- - - - - - - - - - - -
8 5 9  | 7 6 1  | 4 2 3
4 2 6  | 8 5 3  | 7 9 1
7 1 3  | 9 2 4  | 8 5 6
- - - - - - - - - - - -
9 6 1  | 5 3 7  | 2 8 4
2 8 7  | 4 1 9  | 6 3 5
3 4 5  | 2 8 6  | 1 7 9

After setting a note of '1', the notes for cell in row  0  column  2  are  [1]

After setting a note of '4', the notes for cell in row  0  column  2  are  [1, 4]

After setting a note of '2', the notes for cell in row  0  column  2  are  [1, 2, 4]

The notes for cell in row  0  column  2  are  [1, 2, 4]

After removing the note '1' (by clicking on '1' again in note mode), the notes for cell in row  0  column  2  are  [2, 4]

BOARD WITH USER INPUT '2' IN ROW 0 COLUMN 2
5 3 2  | 0 7 0  | 0 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

CHECKING GIVEN VARIABLE OF CELLS
For 0 row 0 col cell (should be True) True
For 0 row 3 col cell (should be False) False
For 0 row 2 col cell (should be False) False
BOARD WITH FORCED UNDOING OF LAST MOVE. BOARD IS RESET
5 3 0  | 0 7 0  | 0 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

BOARD WITH USER MOVE OF '4' IN ROW 0 COL 2
5 3 4  | 0 7 0  | 0 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 2 0 0 2 4 True

ADDRESSES OF HxEntry OBJECTS IN HISTORY
[<representations.HxEntry object at 0x00000277CC9FB7A0>]

BOARD WITH USER MOVE OF '8' IN ROW 0 COL 3
5 3 4  | 8 7 0  | 0 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 0 0 3 8 False

ADDRESSES OF HxEntry OBJECTS IN HISTORY
[<representations.HxEntry object at 0x00000277CC9FB7A0>, <representations.HxEntry object at 0x00000277CC7BAD20>]

BOARD WITH USER MOVE OF '9' IN ROW 0 COL 6
5 3 4  | 8 7 0  | 9 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 6 0 0 6 9 False

ADDRESSES OF HxEntry OBJECTS IN HISTORY
[<representations.HxEntry object at 0x00000277CC9FB7A0>, <representations.HxEntry object at 0x00000277CC7BAD20>, <representations.HxEntry object at 0x00000277CCA2DFA0>]

BOARD WITH USER MOVE OF '6' IN ROW 0 COL 3
5 3 4  | 6 7 0  | 9 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 8 0 3 6 True

ADDRESSES OF HxEntry OBJECTS IN HISTORY
[<representations.HxEntry object at 0x00000277CC9FB7A0>, <representations.HxEntry object at 0x00000277CC7BAD20>, <representations.HxEntry object at 0x00000277CCA2DFA0>, <representations.HxEntry object at 0x00000277CD31AA80>]

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 2 0 0 2 4 True
0 3 0 0 3 8 False
0 6 0 0 6 9 False
0 3 8 0 3 6 True
Undone move:  0 3 8 0 3 6 True

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 2 0 0 2 4 True
0 3 0 0 3 8 False
0 6 0 0 6 9 False

SEE PUZZLE BOARD WITH MOST RECENT MOVE UNDONE
5 3 4  | 8 7 0  | 9 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - - 
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

UNDOING THIS MOVE AS PART OF UndoUntilCorrect() (formatted row,col,value)
0 6 9
UNDOING THIS MOVE AS PART OF UndoUntilCorrect() (formatted row,col,value)
0 3 8

PUZZLE BOARD WITH MOST RECENT STATUS OF WHEN FULL PUZZLE WAS CORRECT
5 3 4  | 0 7 0  | 0 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

BOARD WITH USER MOVE OF '6' IN ROW 0 COL 3
5 3 4  | 6 7 0  | 0 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 0 0 3 6 True

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 2 0 0 2 4 True
0 3 0 0 3 6 True

BOARD WITH USER MOVE OF '3' IN ROW 0 COL 5
5 3 4  | 6 7 3  | 0 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 5 0 0 5 3 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 2 0 0 2 4 True
0 3 0 0 3 6 True
0 5 0 0 5 3 False

BOARD WITH USER MOVE OF '7' IN ROW 0 COL 6
5 3 4  | 6 7 3  | 7 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 6 0 0 6 7 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 2 0 0 2 4 True
0 3 0 0 3 6 True
0 5 0 0 5 3 False
0 6 0 0 6 7 False

BOARD WITH USER MOVE OF '9' IN ROW 0 COL 6
5 3 4  | 6 7 3  | 9 0 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 6 7 0 6 9 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 2 0 0 2 4 True
0 3 0 0 3 6 True
0 5 0 0 5 3 False
0 6 0 0 6 7 False
0 6 7 0 6 9 False

BOARD WITH USER MOVE OF '2' IN ROW 0 COL 7
5 3 4  | 6 7 3  | 9 2 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 7 0 0 7 2 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 2 0 0 2 4 True
0 3 0 0 3 6 True
0 5 0 0 5 3 False
0 6 0 0 6 7 False
0 6 7 0 6 9 False
0 7 0 0 7 2 False

AFTER CELL AT ROW 0 COLUMN 3 WAS RESET BY PUTTING IN SAME NUMBER

5 3 4  | 0 7 3  | 9 2 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 0 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 2 0 0 2 4 True
0 5 0 0 5 3 False
0 6 0 0 6 7 False
0 6 7 0 6 9 False
0 7 0 0 7 2 False

THIS SECTION WILL HAVE DIFFERENT RESULTS IF ClearFromHistory() function call is commented out of CheckCorrectnessOfPuzzle() function
'given' variable for these 5 moves should all be false (formatted row, col, user entry, solution, is given/hardwired?)
[<representations.HxEntry object at 0x00000277CC9FB7A0>, <representations.HxEntry object at 0x00000277CD31B080>, <representations.HxEntry object at 0x00000277CD31B1A0>, <representations.HxEntry object at 0x00000277CD31B260>, <representations.HxEntry object at 0x00000277CD31B380>]  
0 2 4 4 False
0 5 3 8 False
0 6 9 9 False
0 6 9 9 False
0 7 2 1 False
From 5 moves made so far, the first and fourth moves are correct. The second, third, and fifth moves are wrong

The cells of the incorrect moves are  [{'row': 0, 'col': 5}, {'row': 0, 'col': 7}]
The cells of the correct moves are  [{'row': 0, 'col': 2}, {'row': 0, 'col': 6}]

After clicking 'check solution/check puzzle' the given variables for the correct moves should now be true
'given' variable for 2 correct cells (0,2), (0,6) should all be true and for 2 incorrect cells (0,5), (0,7) should be false (formatted row, col, user entry, solution, is given/hardwired?)
0 5 3 8 False
0 7 2 1 False
The cells printed in the above two lists may look different from moves in history since I am returning the current state of the cell instead 
of each unique move.

AFTER CALLING RANDOM HINT, THIS USER-ENTERED WRONG CELL (row and col) AND SOLUTION VALUE ARE RETURNED
(0, 5, 8)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 7 0 0 7 2 False

AFTER CALLING RANDOM HINT, THIS USER-ENTERED WRONG CELL (row and col) AND SOLUTION VALUE ARE RETURNED
(0, 7, 1)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

AFTER CALLING RANDOM HINT, THIS EMPTY CELL (row and col) AND SOLUTION VALUE ARE RETURNED
(5, 1, 1)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

CURRENT BOARD STATUS AFTER RANDOM HINTS (FIXING TWO USER ERRORS AND GIVING ONE EMPTY CELL)
5 3 4  | 0 7 8  | 9 1 0
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 1 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

CALLING SPECIFIC HINT OF ORIGINAL GIVEN CELL
None
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

CALLING SPECIFIC HINT OF USER-ENTERED CELL THAT WAS CHECKED AS CORRECT
None
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

CALLING SPECIFIC HINT OF CELL SOLVED BY RANDOM HINT
None
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)


BOARD WITH USER MOVE OF '2' IN ROW 0 COL 8
5 3 4  | 0 7 8  | 9 1 2
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 1 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 8 0 0 8 2 True

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 8 0 0 8 2 True

BOARD WITH USER MOVE OF '1' IN ROW 0 COL 3
5 3 4  | 1 7 8  | 9 1 2
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 1 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
0 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 0 0 3 1 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 8 0 0 8 2 True
0 3 0 0 3 1 False

CALLING SPECIFIC HINT OF USER-ENTERED UNCHECKED CORRECT MOVE
(0, 8, 2)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 3 0 0 3 1 False

CALLING SPECIFIC HINT OF USER-ENTERED UNCHECKED INCORRECT MOVE
(0, 3, 6)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

CALLING SPECIFIC HINT OF USER-SELECTED EMPTY CELL
(8, 0, 3)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

BOARD WITH USER-ENTERED RIGHT MOVE, USER-ENTERED WRONG MOVE, AND AN EMPTY CELL SOLVED WITH SPECIFIC HINT
5 3 4  | 6 7 8  | 9 1 2
6 0 0  | 1 9 5  | 0 0 0
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 1 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
3 0 0  | 0 8 0  | 0 7 9

USER TRYING TO EDIT A HARDWIRED/GIVEN CELL (nothing should be added to history (history should be empty at this point))

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

TESTING MAKING MOVES WITH A FUNCTION
user inputted row and col of cell they want to edit and value they want to enter:  0 3 9
current cell status (row,col,current value, given?):  0 3 6 True
what is returned from puzzle.SetCell():  False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

user inputted row and col of cell they want to edit and value they want to enter:  1 8 3
current cell status (row,col,current value, given?):  1 8 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 3 IN ROW 1 COL 8
5 3 4  | 6 7 8  | 9 1 2
6 0 0  | 1 9 5  | 0 0 3
0 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 1 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
3 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
1 8 0 1 8 3 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
1 8 0 1 8 3 False

user inputted row and col of cell they want to edit and value they want to enter:  2 0 1
current cell status (row,col,current value, given?):  2 0 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 1 IN ROW 2 COL 0
5 3 4  | 6 7 8  | 9 1 2
6 0 0  | 1 9 5  | 0 0 3
1 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 1 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
3 0 0  | 0 8 0  | 0 7 9

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
2 0 0 2 0 1 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
1 8 0 1 8 3 False
2 0 0 2 0 1 False


AFTER CALLING RANDOM HINT, THE CELL AT ROW 1 COLUMN 8 AND ITS SOLUTION VALUE ARE RETURNED
(1, 8, 8)

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
HERE THE REMAINING MOVE HAS BEEN RECHECKED AND SHOULD SAY TRUE SINCE IT IS A CORRECT MOVE AND THE ONLY MOVE
2 0 0 2 0 1 True

CURRENT BOARD STATUS AFTER RANDOM HINT
5 3 4  | 6 7 8  | 9 1 2
6 0 0  | 1 9 5  | 0 0 8
1 9 8  | 0 0 0  | 0 6 0
- - - - - - - - - - - -
8 0 0  | 0 6 0  | 0 0 3
4 0 0  | 8 0 3  | 0 0 1
7 1 0  | 0 2 0  | 0 0 6
- - - - - - - - - - - -
0 6 0  | 0 0 0  | 2 8 0
0 0 0  | 4 1 9  | 0 0 5
3 0 0  | 0 8 0  | 0 7 9

Sample output from test4x4.py for 4x4 puzzle:

0 0 0
1 0 1
0 0 2
0 0 3
3 1 0
0 1 1
0 1 2
1 1 3
4 2 0
0 2 1
0 2 2
2 2 3
0 3 0
0 3 1
4 3 2
0 3 3

Puzzle is a  4 x 4  grid

Puzzle is  Easy  difficulty

ORIGINAL BOARD
0 1  | 0 0
3 0  | 0 1
- - - - - -
4 0  | 0 2
0 0  | 4 0

SOLVED BOARD
2 1  | 3 4
3 4  | 2 1
- - - - - -
4 3  | 1 2
1 2  | 4 3

After setting a note of '1', the notes for cell in row  0  column  2  are  [1]

After setting a note of '4', the notes for cell in row  0  column  2  are  [1, 4]

After setting a note of '2', the notes for cell in row  0  column  2  are  [1, 2, 4]

The notes for cell in row  0  column  2  are  [1, 2, 4]

After removing the note '1' (by clicking on '1' again in note mode), the notes for cell in row  0  column  2  are  [2, 4]

BOARD WITH USER INPUT '2' IN ROW 0 COLUMN 2
0 1  | 2 0
3 0  | 0 1
- - - - - - 
4 0  | 0 2
0 0  | 4 0

CHECKING GIVEN VARIABLE OF CELLS
For 0 row 1 col cell (should be True) True
For 0 row 3 col cell (should be False) False
For 0 row 2 col cell (should be False) False
BOARD WITH FORCED UNDOING OF LAST MOVE. BOARD IS RESET
0 1  | 0 0
3 0  | 0 1
- - - - - -
4 0  | 0 2
0 0  | 4 0
user inputted row and col of cell they want to edit and value they want to enter:  2 1 1
current cell status (row,col,current value, given?):  2 1 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 1 IN ROW 2 COL 1
0 1  | 0 0
3 0  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
2 1 0 2 1 1 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False

user inputted row and col of cell they want to edit and value they want to enter:  1 1 4
current cell status (row,col,current value, given?):  1 1 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 4 IN ROW 1 COL 1
0 1  | 0 0
3 4  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
1 1 0 1 1 4 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False

user inputted row and col of cell they want to edit and value they want to enter:  0 3 3
current cell status (row,col,current value, given?):  0 3 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 3 IN ROW 0 COL 3
0 1  | 0 3
3 4  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 0 0 3 3 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False
0 3 0 0 3 3 False

user inputted row and col of cell they want to edit and value they want to enter:  0 3 2
current cell status (row,col,current value, given?):  0 3 3 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 2 IN ROW 0 COL 3
0 1  | 0 2
3 4  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 3 0 3 2 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False
0 3 0 0 3 3 False
0 3 3 0 3 2 False

user inputted row and col of cell they want to edit and value they want to enter:  0 1 4
current cell status (row,col,current value, given?):  0 1 1 True
what is returned from puzzle.SetCell():  False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False
0 3 0 0 3 3 False
0 3 3 0 3 2 False

Undone move:  0 3 3 0 3 2 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False
0 3 0 0 3 3 False

SEE PUZZLE BOARD WITH MOST RECENT MOVE UNDONE
0 1  | 0 3
3 4  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

UNDOING THIS MOVE AS PART OF UndoUntilCorrect() (formatted row,col,value)
0 3 3
UNDOING THIS MOVE AS PART OF UndoUntilCorrect() (formatted row,col,value)
1 1 4
UNDOING THIS MOVE AS PART OF UndoUntilCorrect() (formatted row,col,value)
2 1 1

PUZZLE BOARD WITH MOST RECENT STATUS OF WHEN FULL PUZZLE WAS CORRECT
0 1  | 0 0
3 0  | 0 1
- - - - - -
4 0  | 0 2
0 0  | 4 0
user inputted row and col of cell they want to edit and value they want to enter:  2 1 1
current cell status (row,col,current value, given?):  2 1 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 1 IN ROW 2 COL 1
0 1  | 0 0
3 0  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
2 1 0 2 1 1 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False

user inputted row and col of cell they want to edit and value they want to enter:  1 1 4
current cell status (row,col,current value, given?):  1 1 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 4 IN ROW 1 COL 1
0 1  | 0 0
3 4  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
1 1 0 1 1 4 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False

user inputted row and col of cell they want to edit and value they want to enter:  0 3 3
current cell status (row,col,current value, given?):  0 3 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 3 IN ROW 0 COL 3
0 1  | 0 3
3 4  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 0 0 3 3 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False
0 3 0 0 3 3 False

user inputted row and col of cell they want to edit and value they want to enter:  0 3 2
current cell status (row,col,current value, given?):  0 3 3 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 2 IN ROW 0 COL 3
0 1  | 0 2
3 4  | 0 1
- - - - - -
4 1  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 3 0 3 2 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False
0 3 0 0 3 3 False
0 3 3 0 3 2 False

user inputted row and col of cell they want to edit and value they want to enter:  0 1 4
current cell status (row,col,current value, given?):  0 1 1 True
what is returned from puzzle.SetCell():  False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
2 1 0 2 1 1 False
1 1 0 1 1 4 False
0 3 0 0 3 3 False
0 3 3 0 3 2 False


2 1 1 3 False
1 1 4 4 False
0 3 2 4 False
0 3 2 4 False
From 4 moves made so far, the second move is correct. The rest are wrong

The cells of the incorrect moves are  [{'row': 0, 'col': 3}, {'row': 2, 'col': 1}]
The cells of the correct moves are  [{'row': 1, 'col': 1}]

After clicking 'check solution/check puzzle' the given variables for the correct moves should now be true
'given' variable for correct cell (1,1) should be true and for 2 incorrect cells (2,1), (0,3) should be false (formatted row, col, user entry, solution, is given/hardwired?)
2 1 1 3 False
0 3 2 4 False
0 3 2 4 False
UNDOING THIS MOVE AS PART OF UndoUntilCorrect() (formatted row,col,value)
0 3 2
UNDOING THIS MOVE AS PART OF UndoUntilCorrect() (formatted row,col,value)
0 3 3
UNDOING THIS MOVE AS PART OF UndoUntilCorrect() (formatted row,col,value)
2 1 1

PUZZLE BOARD WITH MOST RECENT STATUS OF WHEN FULL PUZZLE WAS CORRECT
0 1  | 0 0
3 4  | 0 1
- - - - - -
4 0  | 0 2
0 0  | 4 0
user inputted row and col of cell they want to edit and value they want to enter:  1 2 1
current cell status (row,col,current value, given?):  1 2 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 1 IN ROW 1 COL 2
0 1  | 0 0
3 4  | 1 1
- - - - - -
4 0  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
1 2 0 1 2 1 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
1 2 0 1 2 1 False

user inputted row and col of cell they want to edit and value they want to enter:  0 0 2
current cell status (row,col,current value, given?):  0 0 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 2 IN ROW 0 COL 0
2 1  | 0 0
3 4  | 1 1
- - - - - -
4 0  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 0 0 0 0 2 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
1 2 0 1 2 1 False
0 0 0 0 0 2 False

user inputted row and col of cell they want to edit and value they want to enter:  0 3 2
current cell status (row,col,current value, given?):  0 3 0 False
what is returned from puzzle.SetCell():  True

BOARD WITH USER MOVE OF 2 IN ROW 0 COL 3
2 1  | 0 2
3 4  | 1 1
- - - - - -
4 0  | 0 2
0 0  | 4 0

HISTORY ELEMENT REFLECTING PAST MOVE (old row, old col, old value, new row, new col, new value, is puzzle correct?)
0 3 0 0 3 2 False

LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
1 2 0 1 2 1 False
0 0 0 0 0 2 False
0 3 0 0 3 2 False


AFTER CALLING RANDOM HINT, THIS USER-ENTERED WRONG CELL (row and col) AND SOLUTION VALUE ARE RETURNED
(0, 3, 4)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
1 2 0 1 2 1 False
0 0 0 0 0 2 False

CURRENT BOARD STATUS AFTER RANDOM HINT
2 1  | 0 4
3 4  | 1 1
- - - - - -
4 0  | 0 2
0 0  | 4 0

AFTER CALLING RANDOM HINT, THIS OTHER USER-ENTERED CELL (row and col) AND SOLUTION VALUE ARE RETURNED
(1, 2, 2)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 0 0 0 0 2 True

CURRENT BOARD STATUS AFTER RANDOM HINT
2 1  | 0 4
3 4  | 2 1
- - - - - - 
4 0  | 0 2
0 0  | 4 0

AFTER CALLING RANDOM HINT, THIS EMPTY CELL (row and col) AND SOLUTION VALUE ARE RETURNED
(2, 1, 3)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)
0 0 0 0 0 2 True

CURRENT BOARD STATUS AFTER RANDOM HINT
2 1  | 0 4
3 4  | 2 1
- - - - - -
4 3  | 0 2
0 0  | 4 0
CALLING SPECIFIC HINT OF USER-INPUTTED CORRECT BUT UNCHECKED CELL
(0, 0, 2)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

CALLING SPECIFIC HINT OF EMPTY CELL
(0, 2, 3)
LOOKING AT HISTORY STACK, MOST RECENT MOVE ON BOTTOM (last printed)

CURRENT BOARD STATUS AFTER SPECIFIC HINTS
2 1  | 3 4
3 4  | 2 1
- - - - - -
4 3  | 0 2
0 0  | 4 0